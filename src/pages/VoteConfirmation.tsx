
import { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { CheckCircle, ArrowLeft, Shield } from "lucide-react";

const VoteConfirmation = () => {
  const navigate = useNavigate();
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [hasVoted, setHasVoted] = useState(false);

  useEffect(() => {
    // Check if user has already voted
    const votingStatus = localStorage.getItem("gujaratVotingStatus");
    if (votingStatus === "completed") {
      setHasVoted(true);
    }
  }, []);

  const handleFinalSubmit = () => {
    if (hasVoted) {
      alert("ркдркорлЗ рккрк╣рлЗрк▓рлЗркерлА ркЬ ркоркд ркЖрккрлНркпрлЛ ркЫрлЗ! You have already cast your vote!");
      return;
    }

    setIsSubmitting(true);
    // Simulate vote submission
    setTimeout(() => {
      localStorage.setItem("gujaratVotingStatus", "completed");
      localStorage.setItem("gujaratVoteTimestamp", new Date().toISOString());
      setIsSubmitting(false);
      navigate("/voter-dashboard");
    }, 2000);
  };

  if (hasVoted) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-orange-50 via-white to-green-50 flex items-center justify-center p-4">
        <Card className="w-full max-w-md text-center">
          <CardHeader>
            <div className="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <Shield className="w-8 h-8 text-red-600" />
            </div>
            <CardTitle className="text-red-800">ркоркд рккрк╣рлЗрк▓рлЗркерлА ркЖрккрк╡рк╛ркорк╛ркВ ркЖрк╡рлНркпрлЛ ркЫрлЗ</CardTitle>
            <CardDescription>Vote Already Cast</CardDescription>
          </CardHeader>
          <CardContent>
            <p className="text-gray-600 mb-4">
              ркдркорлЗ рккрк╣рлЗрк▓рлЗркерлА ркЬ ркЖ ркЪрлВркВркЯркгрлАркорк╛ркВ ркдркорк╛рк░рлЛ ркоркд ркЖрккрлНркпрлЛ ркЫрлЗред ркПркХ ркоркдркжрк╛рк░ ркорк╛ркдрлНрк░ ркПркХ ркЬ рк╡рк╛рк░ ркоркд ркЖрккрлА рк╢ркХрлЗ ркЫрлЗред
            </p>
            <Button onClick={() => navigate("/voter-dashboard")} className="bg-orange-600 hover:bg-orange-700">
              ркбрлЗрк╢ркмрлЛрк░рлНркб рккрк░ рккрк╛ркЫрк╛ ркЬрк╛ркУ
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-orange-50 via-white to-green-50 flex items-center justify-center p-4">
      <div className="w-full max-w-md">
        <Card className="border-2 border-orange-200">
          <CardHeader className="text-center bg-gradient-to-r from-orange-100 to-green-100">
            <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <CheckCircle className="w-8 h-8 text-green-600" />
            </div>
            <CardTitle className="text-orange-800">ркдркорк╛рк░рк╛ ркоркдркирлА рккрлБрк╖рлНркЯрк┐ ркХрк░рлЛ</CardTitle>
            <CardDescription>
              ркЕркВркдрк┐рко рк╕ркмркорк┐рк╢рки рккрк╣рлЗрк▓рк╛ркВ ркдркорк╛рк░рлА рккрк╕ркВркжркЧрлАркирлА рк╕ркорлАркХрлНрк╖рк╛ ркХрк░рлЛ
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-6">
            {/* Election Details */}
            <div className="text-center">
              <h3 className="font-semibold text-gray-900 mb-2">Gujarat Legislative Assembly Election 2024</h3>
              <p className="text-sm text-gray-600">Gandhinagar Constituency</p>
            </div>

            {/* Selected Candidate */}
            <Card className="border-2 border-orange-200 bg-orange-50">
              <CardContent className="p-4 text-center">
                <div className="text-4xl mb-2">ЁЯжБ</div>
                <h4 className="font-bold text-gray-900">Rajesh Patel</h4>
                <p className="text-gray-600">Bharatiya Janata Party (BJP)</p>
              </CardContent>
            </Card>

            {/* Security Notice */}
            <Card className="border-green-200 bg-green-50">
              <CardContent className="p-4">
                <div className="flex items-start space-x-3">
                  <Shield className="w-5 h-5 text-green-600 mt-0.5" />
                  <div>
                    <h4 className="font-semibold text-green-800 mb-1">рк╕рлБрк░ркХрлНрк╖рк╛ рк╕рлВркЪркирк╛</h4>
                    <p className="text-green-700 text-sm">
                      ркЖ ркХрлНрк░рк┐ркпрк╛ рккрлВрк░рлНрк╡рк╡ркдрлН ркХрк░рлА рк╢ркХрк╛ркдрлА ркиркерлА. ркдркорк╛рк░рлЛ ркоркд ркПркирлНркХрлНрк░рк┐рккрлНркЯ ркХрк░рк╡рк╛ркорк╛ркВ ркЖрк╡рк╢рлЗ ркЕркирлЗ Gujarat ECI рк╕рк┐рк╕рлНркЯркоркорк╛ркВ рк╕рлБрк░ркХрлНрк╖рк┐ркд рк░рлАркдрлЗ рк╕ркВркЧрлНрк░рк╣рк┐ркд ркХрк░рк╡рк╛ркорк╛ркВ ркЖрк╡рк╢рлЗред
                    </p>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Action Buttons */}
            <div className="flex space-x-3">
              <Button variant="outline" onClick={() => navigate("/voting-booth")} className="flex-1">
                рккрк╛ркЫрк╛ ркЬрк╛ркУ
              </Button>
              
              <Button 
                onClick={handleFinalSubmit}
                disabled={isSubmitting}
                className="flex-1 bg-green-600 hover:bg-green-700"
              >
                <Shield className="w-4 h-4 mr-2" />
                {isSubmitting ? "рк╕ркмркорк┐ркЯ ркХрк░рлА рк░рк╣рлНркпрк╛ ркЫрлАркП..." : "ркоркд рк╕ркмркорк┐ркЯ ркХрк░рлЛ"}
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default VoteConfirmation;
